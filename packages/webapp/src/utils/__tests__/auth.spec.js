import auth from '../../utils/auth.js'

describe('auth util', () => {
  describe('getAuthenticationUrl', () => {
    it('Should return the login URL', () => {
      const url = auth.getAuthenticationUrl()
      expect(url).toEqual('signin-url')
    })
  })
  describe('authenticate', () => {
    it('Should return token generated by msal', async () => {
      const token = await auth.authenticate({}, {
        set: () => { }
      })
      expect(token.token).toEqual('test')
    })
  })
  describe('refresh', () => {
    it('Should return nothing, and hit acquireTokenSilent', async () => {
      const response = await auth.refresh({}, {
        set: () => { }
      })
      expect(response).toEqual(undefined)
    })
  })
  describe('logout', () => {
    it('Should ', async () => {
      const response = await auth.logout({
        auth: {
          credentials: {
            account: {}
          }
        }
      })
      expect(response).toEqual(undefined)
    })
  })
  describe('getLogoutUrl', () => {
    it('Should ', async () => {
      const response = await auth.getLogoutUrl()
      expect(response.href).toEqual('http://instance/domain/policyId/oauth2/v2.0/logout?post_logout_redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fsigned-out')
    })
  })
})
